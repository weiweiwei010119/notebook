(window.webpackJsonp=window.webpackJsonp||[]).push([[10],{337:function(t,a,s){"use strict";s.r(a);var e=s(7),n=Object(e.a)({},(function(){var t=this,a=t._self._c;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"flask的部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#flask的部署"}},[t._v("#")]),t._v(" flask的部署")]),t._v(" "),a("h3",{attrs:{id:"本地测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地测试"}},[t._v("#")]),t._v(" 本地测试")]),t._v(" "),a("p",[t._v("这个可以采用python自己启动，方法就是写好一个flask文件之后，直接在那个地址")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("python app:app\n")])])]),a("p",[a("code",[t._v("第一个app是指文件名，第二个app是flask文件里面的app。")])]),t._v(" "),a("h3",{attrs:{id:"服务器启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务器启动"}},[t._v("#")]),t._v(" 服务器启动")]),t._v(" "),a("p",[t._v("需要使用gunicorn进行守护线程，第一步是安装。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("pip "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" gunicorn\n")])])]),a("p",[t._v("第二步是一顿cd进入文件所在地址后，先写一个配置文件，保存为任意名字，越简单越好，我就命名为"),a("code",[t._v("a.py")]),t._v("。")]),t._v(" "),a("div",{staticClass:"language-python extra-class"},[a("pre",{pre:!0,attrs:{class:"language-python"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 绑定的ip与端口")]),t._v("\nbind "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'172.17.91.250:5252'")]),t._v("\n           \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 设置超时时间120s，默认为30s。按自己的需求进行设置timeout = 120")]),t._v("\ntimeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("120")]),t._v("      \n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 超时重启")]),t._v("\ngraceful_timeout "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("300")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在keep-alive连接上等待请求的秒数，默认情况下值为2。一般设定在1~5秒之间。")]),t._v("\n")])])]),a("p",[t._v("第三步就可以启动了，在我的实验室服务器上，启动的代码应该是。")]),t._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("/home/web_test/miniconda3/bin/gunicorn "),a("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-c")]),t._v(" a.py app:app\n")])])]),a("h3",{attrs:{id:"配置nginx"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置nginx"}},[t._v("#")]),t._v(" 配置nginx")]),t._v(" "),a("div",{staticClass:"language-editorconfig extra-class"},[a("pre",{pre:!0,attrs:{class:"language-editorconfig"}},[a("code",[t._v("location ^~ /DLpMHCIapi/{\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#DLpMHC I的后端接口跨域处理，由gunicorn守护")]),t._v("\n\t\tproxy_pass http://39.104.48.98:5252/"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";")]),t._v("\n\t\t\n\t\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#转发代理，设置请求头允许跨域")]),t._v("\n\t\tadd_header 'Access-Control-Allow-Origin' *"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";")]),t._v("\n\t\tadd_header 'Access-Control-Allow-Credentials' 'true'"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";")]),t._v("\n\t\tadd_header 'Access-Control-Allow-Methods' *"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";")]),t._v("\n\t\tadd_header 'Access-Control-Allow-Headers' *"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v(";")]),t._v("\n}\n")])])])])}),[],!1,null,null,null);a.default=n.exports}}]);